{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'first-app';  \n  randomNumber: number =Math.floor(Math.random()*100);\n  aantalBeurten = 10;\n  verschil;  \n  gokken = [];\n \n  \n  \n  checkGok(value){\n    this.verschil = this.randomNumber - value;\n    this.aantalBeurten = this.aantalBeurten -1; \n    if (this.verschil === 0)\n    {\n      this.aantalBeurten = 0\n    }\n    this.addToList(value);     \n  }\n  refresh(){\n    window.location.reload();\n  }\n  addToList(value){\n    this.gokken.push(value);\n  }\n}\n","<div>\n<button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>\n\n<h1> Raad het getal! </h1>  \n\n<h3>Raad een getal tussen 1 en 100.</h3>\n\n<input placeholder=\"0\" #gok />\n\n<button *ngIf=\"aantalBeurten>0\"(click)=\"checkGok(gok.value)\">check</button>\n\n    <p *ngIf=\"verschil<0\">Gok lager.</p>\n    <p *ngIf=\"verschil>0\">Gok hoger.</p>\n    <p *ngIf=\"verschil===0\" >Je hebt juist gegokt!</p>\n    <p *ngIf=\"aantalBeurten>0\">Je hebt nog {{ aantalBeurten }} kansen.</p> \n\n<button mat-button *ngIf=\"aantalBeurten===0\"(click)=\"refresh()\">Opnieuw?</button>\n\n<mat-menu #menu=\"matMenu\">\n    <button mat-menu-item (click)=\"refresh()\">Opnieuw starten?</button>\n  </mat-menu>\n\n<mat-list dense>\n    <mat-list-item *ngFor=\"let gok of gokken; let i = index\">\n      gok {{ i+1 }} = {{ gok }}\n    </mat-list-item>\n</mat-list>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\n\n \n\n\n@NgModule({\n  declarations: [\n    AppComponent,    \n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button'; \r\nimport { MatMenuModule } from '@angular/material/menu'; \r\nimport { MatListModule } from '@angular/material/list'; \r\n\r\n@NgModule({\r\n    imports: [MatButtonModule, MatMenuModule, MatListModule ],\r\n    exports: [MatButtonModule, MatMenuModule, MatListModule ]\r\n})\r\n\r\nexport class MaterialModule{}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}